# App/nginx/nginx.conf
# Nginx site configuration for Daily Standup system

# Upstream backend servers
upstream backend {
    server 192.168.48.201:8070 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Upstream frontend servers
upstream frontend {
    server 192.168.48.201:5174 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;

# WebSocket connection mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Main server block
server {
    listen 80;
    listen [::]:80;
    server_name localhost standup.local;

    # Logging
    access_log /var/log/nginx/standup_access.log;
    error_log /var/log/nginx/standup_error.log warn;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server block (for production)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost standup.local;

    # SSL configuration (REPLACE WITH YOUR CERTIFICATE PATHS)
    ssl_certificate /etc/letsencrypt/live/standup.local/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/standup.local/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client settings
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # WebSocket proxy for weekly interview
    location /weekly_interview/ws/ {
        # Rate limiting
        limit_req zone=websocket burst=10 nodelay;
        
        # WebSocket upgrade
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_redirect off;
        proxy_buffering off; # Required for long-lived connections
    }
    
    # API endpoints
    # This should be one of the last /weekly_interview/ locations to act as a catch-all for the API
    location /weekly_interview/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching for static API responses
        location ~* /weekly_interview/(health|stats)$ {
            proxy_pass http://backend;
            proxy_cache_valid 200 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # File upload endpoints
    location /weekly_interview/api/record-respond {
        # Rate limiting for uploads
        limit_req zone=upload burst=5 nodelay;
        
        # Proxy to backend
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Large file handling
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
        client_max_body_size 50M;
    }
    
    # Audio files serving
    location /weekly_interview/audio/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        
        # Caching for audio files
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options "nosniff";
    }
    
    # PDF downloads
    location /weekly_interview/download_results/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        
        # Large file handling
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
    }
    
    # Frontend React app
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
    }
    
    # React Router fallback
    # location @react {
    #     proxy_pass http://frontend;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    # }
    
    # Static files (if served directly)
    location /static/ {
        alias /var/www/standup-static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://backend/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
    
    # Deny access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
}

# Server block for local monitoring
server {
    listen 127.0.0.1:8080;
    server_name 127.0.0.1;

    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1; # Only allow requests from localhost
        deny all;
    }

    # Add a root location to catch all other requests to this port for diagnostics
    location / {
        return 404 "Resource not found on monitoring port 8080.";
    }
}